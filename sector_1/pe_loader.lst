     1                                  ;   Enter 32-bit protection mode, reload the PEOS to proper location
     2                                  ;   
     3                                  ;   nasm load_peos.asm -o sector_1.bin
     4                                  ;
     5                                  ;   Author:Sharp.Cao
     6                                  ;   Date:2025/1/26
     7                                  ;-----------------------------------------------------------------------------------------
     8                                                  org 0x8000
     9                                  PE_Base         equ 0x8000
    10                                  PE_Head         equ PE_Base + 0x200
    11                                  EntryPoint      equ PE_Head + 0x28
    12                                  ImageBase       equ PE_Head + 0x34 
    13                                  CodeVirtualAddr equ PE_Head + 0x104 
    14                                  CodeRawSize     equ PE_Head + 0x108 
    15                                  CodeRawPointer  equ PE_Head + 0x10c 
    16                                  DataVirtualAddr equ PE_Head + 0x12c 
    17                                  DataRawSize     equ PE_Head + 0x130 
    18                                  DataRawPointer  equ PE_Head + 0x134 
    19                                  
    20                                  ;-----------------------------------------------------------------------------------------
    21                                  [bits 16]
    22 00000000 EB36                                        jmp     _start
    23                                  BOOTINFO_BASE:
    24 00000002 00                          BI_CYLS:        db 0
    25 00000003 00                          BI_LEDS:        db 0
    26 00000004 08                          BI_VMODE:       db 8
    27 00000005 00                          BI_RESERVE:     db 0
    28 00000006 4001                        BI_SCRNX:       dw 320
    29 00000008 C800                        BI_SCRNY:       dw 200
    30 0000000A 00000A00                    BI_VRAM:        dd 0xa0000
    31                                      
    32 0000000E 1F00                    gdt_size:           dw 8*4-1             ;GDT Table size, total bytes minus 1
    33 00000010 [14000000]              gdt_base:           dd GDT_BASE_ADDR     ;GDT base address
    34                                  
    35                                  GDT_BASE_ADDR:
    36 00000014 0000000000000000        GDT_0:              dd 0h, 0h
    37 0000001C FFFF0000009ACF00        GDT_1_CS:           dd 0x0000ffff, 0x00cf9a00
    38 00000024 FFFF00000092CF00        GDT_2_DS:           dd 0x0000ffff, 0x00cf9200
    39 0000002C 0000000000964000        GDT_3_SS:           dd 0x00000000, 0x00409600
    40                                  ;GDT_3_SS:          dd 0x0000ffff, 0x00cf9200
    41 00000034 00000000                PBOOTINFO:          dd 0h
    42                                  
    43                                  
    44                                  
    45                                  _start:
    46 00000038 B013                                mov     al, 0x13
    47 0000003A B400                                mov     ah, 0x0
    48 0000003C CD10                                int     0x10
    49 0000003E B402                                mov     ah,0x02
    50 00000040 CD16                                int     0x16
    51 00000042 A2[0300]                            mov     [BI_LEDS], al
    52                                  
    53                                      ;Load 48bit GDT
    54 00000045 0F0116[0E00]                        lgdt    [gdt_size]                      
    55                                  
    56                                      ;Open A20 address
    57 0000004A E492                                in      al,             0x92            
    58 0000004C 0C02                                or      al,             0000_0010B
    59 0000004E E692                                out     0x92,           al
    60                                  
    61                                      ;The interrupts should be prohibited now
    62 00000050 FA                                  cli 
    63                                  
    64                                      ;Turn on the protection mode
    65 00000051 0F20C0                              mov     eax,cr0     
    66 00000054 6683C801                            or      eax,1
    67 00000058 0F22C0                              mov     cr0,eax
    68                                  
    69                                      ;Set DS\ES\SS\ESP, jump to Entry Point
    70 0000005B B81000                              mov     ax, 00000000000_10_000b
    71 0000005E 8ED8                                mov     ds, ax
    72 00000060 8EC0                                mov     es, ax
    73 00000062 8EE0                                mov     fs, ax
    74 00000064 8EE8                                mov     gs, ax
    75                                  
    76 00000066 B81800                              mov     ax, 00000000000_11_000b
    77 00000069 8ED0                                mov     ss, ax
    78 0000006B 66BC007C0000                        mov     esp, 0x7c00
    79                                              
    80 00000071 66EA[79000000]0800                  jmp     dword 0x0008:_clear_ram ; cs=8=1000bï¼ŒThe first Selector
    81                                  
    82                                  ;-----------------------------------------------------------------------------------------
    83                                  [bits 32]
    84                                  ;copy_image hard code
    85                                  ;           image_base  equ    0x100000
    86                                  ;           code_rva    equ      0x1000
    87                                  ;           data_rva    equ      0x2000
    88                                  ;           entry_point equ      0x1008
    89                                  ;           org_base    equ      0x8000
    90                                  ;           code_off    equ       0x600
    91                                  ;           code_size   equ       0x200
    92                                  ;           data_off    equ       0x800
    93                                  ;           data_size   equ       0x200
    94                                  
    95                                  ;           mov     esi, org_base + code_off
    96                                  ;           mov     edi, image_base + code_rva
    97                                  ;           mov     ecx, code_size / 4
    98                                  ;           rep     movsd
    99                                  ;           mov     esi, org_base + data_off
   100                                  ;           mov     edi, image_base + data_rva
   101                                  ;           mov     ecx, data_size / 4
   102                                  ;           rep     movsd
   103                                  ;           jmp     dword 0x0008:image_base + entry_point
   104                                  _clear_ram:
   105 00000079 B800000000                          mov     eax, 0
   106 0000007E B900000400                          mov     ecx, 0x100000 / 4
   107 00000083 BF00001000                          mov     edi, 0x100000
   108 00000088 FC                                  cld
   109 00000089 F3AB                                rep     stosd
   110                                  
   111                                  _copy_image:
   112 0000008B 8B1D34820000                        mov     ebx, [ImageBase]        ;ImageBase
   113                                  ;copy code segment virtual address
   114 00000091 8B350C830000                        mov     esi, [CodeRawPointer]
   115 00000097 81C600800000                        add     esi, PE_Base
   116 0000009D 8B3D04830000                        mov     edi, [CodeVirtualAddr]
   117 000000A3 01DF                                add     edi, ebx
   118 000000A5 8B0D08830000                        mov     ecx, [CodeRawSize]
   119 000000AB C1E902                              shr     ecx, 2
   120 000000AE F3A5                                rep     movsd           
   121                                  ;copy data segment to virtual address       
   122 000000B0 8B3534830000                        mov     esi, [DataRawPointer]
   123 000000B6 81C600800000                        add     esi, PE_Base
   124 000000BC 8B3D2C830000                        mov     edi, [DataVirtualAddr]
   125 000000C2 01DF                                add     edi, ebx
   126 000000C4 8B0D30830000                        mov     ecx, [DataRawSize]
   127 000000CA C1E902                              shr     ecx, 2
   128 000000CD F3A5                                rep     movsd
   129                                  ;jump to EntryPoint
   130 000000CF BA[02000000]                        mov     edx, BOOTINFO_BASE
   131 000000D4 52                                  push    edx
   132 000000D5 A128820000                          mov     eax, [EntryPoint]       
   133 000000DA 01D8                                add     eax, ebx
   134 000000DC 9BDBE3                              finit
   135 000000DF FFD0                                call    eax
   136                                  
   137 000000E1 00<rep 11Fh>            times  512 -($-$$) db 0
   138                                      
   139                                  
   140                                  
